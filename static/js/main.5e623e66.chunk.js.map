{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","reversed","setReversed","NONE","sortType","setSortType","isResetBtnClicked","Boolean","reorderedGoods","goods","visibleGoods","sort","first","next","ALPHABET","localeCompare","LENGTH","length","Error","reverse","getReorderedGoods","className","type","classnames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAAoBC,QAAQH,IAAaP,EAASM,MAAQF,GAC1DO,EArDD,SACLC,EACAL,EACAH,GAEA,IAAMS,EAAY,YAAOD,GAuBzB,OArBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKP,EAASiB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAKI,OAE7B,KAAKpB,EAASM,KACZ,OAAO,EAET,QACE,MAAM,IAAIe,MAAM,uBAKlBjB,GACFS,EAAaS,UAGRT,EAyBgBU,CAAkBtB,EAAiBM,EAAUH,GAEpE,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYnB,IAAaP,EAASiB,WAEtCU,QA7BmB,WACzBnB,EAAYR,EAASiB,WAsBjB,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYnB,IAAaP,EAASmB,SAEtCQ,QArCa,WACnBnB,EAAYR,EAASmB,SA8BjB,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAatB,IAEjBuB,QA5CY,WAClBtB,GAAY,SAAAuB,GAAO,OAAKA,MAqCpB,qBAWEnB,GACA,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAjDQ,WAChBnB,EAAYR,EAASM,MACrBD,GAAY,IA4CN,sBAUJ,6BACE,6BACGM,EAAekB,KAAI,SAAAC,GAAI,OACtB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cCjInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5e623e66.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  reversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((first, next) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return first.localeCompare(next);\n\n      case SortType.LENGTH:\n        return first.length - next.length;\n\n      case SortType.NONE:\n        return 0;\n\n      default:\n        throw new Error('Wrong sort type');\n        break;\n    }\n  });\n\n  if (reversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseList = () => {\n    setReversed(current => !current);\n  };\n\n  const resetList = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  const isResetBtnClicked = Boolean(sortType !== SortType.NONE || reversed);\n  const reorderedGoods = getReorderedGoods(goodsFromServer, sortType, reversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortAlphabetically}\n\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-warning',\n            { 'is-light': !reversed },\n          )}\n          onClick={reverseList}\n        >\n          Reverse\n        </button>\n\n        { isResetBtnClicked && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetList}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reorderedGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}